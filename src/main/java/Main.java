import animals.Animal;
import animals.Cat;
import animals.Dog;
import help.OwnColor;

public class Main {
    public static void main(String[] args) {
//        Animal animal = new Dog(5, "AnimalName", "Red"); //все объекты создаются через ключевое слово new
//        Dog dog = new Dog(3, "Жучка", "Black");
//
//        animal.Eat();
//        animal.Go();
//        animal.Say();
//
//        dog.Eat();
//        dog.Go();
//        dog.Say();
//        dog.Hello();

        Animal[] animals = new Animal[]{
            new Dog(3, "Жучка", OwnColor.RED),
            new Cat(4, "Васька", OwnColor.BLACK),
            new Cat(2, "Бобик", OwnColor.WHITE),
        };

        for (Animal animal: animals){
            animal.Hello();
            if (animal instanceof Cat) { //перед приведением типов необходимо проверить является ли наследник этим типом к которму мы хотим привести
                ((Cat)animal).playWithMouse(); //приводим типы от родителя к наследнику
            } else if (animal instanceof Dog) {
                ((Dog)animal).aport();
            }
        }

    }
}

//Объектно-ориенти́рованное программи́рование (ООП) — методология программирования, основанная на представлении программы
// в виде совокупности объектов, каждый из которых является экземпляром определённого класса,
// а классы образуют иерархию наследовани

//Инкапсуляция – это свойство системы, позволяющее объединить данные и методы, работающие с ними, в классе и скрыть детали
//        реализации от пользователя.

//    Наследование - Концепция объектно-ориентированного программирования, согласно которой абстрактный тип данных может наследовать данные
//        и функциональность некоторого существующего типа,
//        способствуя повторному использованию компонентов программного обеспечения.

//полиморфизм — это способность обьекта использовать методы производного класса, который не существует на момент создания базового
//Полиморфизм – это свойство системы использовать объекты с одинаковым интерфейсом без информации о типе и внутренней структуре объекта.